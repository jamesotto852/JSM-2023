@inproceedings{nasehi_what_2012,
	title = {What makes a good code example?: {A} study of programming {Q}\&{A} in {StackOverflow}},
	shorttitle = {What makes a good code example?},
	doi = {10.1109/ICSM.2012.6405249},
	abstract = {Programmers learning how to use an API or a programming language often rely on code examples to support their learning activities. However, what makes for an effective ode example remains an open question. Finding the haracteristics of the effective examples is essential in improving the appropriateness of these learning aids. To help answer this question we have onducted a qualitative analysis of the questions and answers posted to a programming Q\&A web site called StackOverflow. On StackOverflow answers can be voted on, indicating which answers were found helpful by users of the site. By analyzing these well-received answers we identified haracteristics of effective examples. We found that the explanations acompanying examples are as important as the examples themselves. Our findings have implications for the way the API documentation and example set should be developed and evolved as well as the design of the tools assisting the development of these materials.},
	booktitle = {2012 28th {IEEE} {International} {Conference} on {Software} {Maintenance} ({ICSM})},
	author = {Nasehi, Seyed Mehdi and Sillito, Jonathan and Maurer, Frank and Burns, Chris},
	month = sep,
	year = {2012},
	note = {ISSN: 1063-6773},
	keywords = {API, Best practices, code example, Conferences, documentation, Documentation, Java, Programming, social learning, Software maintenance, Web sites},
	pages = {25--34},
	file = {IEEE Xplore Abstract Record:/home/jamesotto852/Zotero/storage/IPH5W4TF/6405249.html:text/html;Submitted Version:/home/jamesotto852/Zotero/storage/JI37E6BB/Nasehi et al. - 2012 - What makes a good code example A study of progra.pdf:application/pdf},
}

@book{bhatti_docs_2021,
	address = {Berkeley, CA},
	title = {Docs for {Developers}: {An} {Engineer}’s {Field} {Guide} to {Technical} {Writing}},
	isbn = {978-1-4842-7216-9 978-1-4842-7217-6},
	shorttitle = {Docs for {Developers}},
	url = {https://link.springer.com/10.1007/978-1-4842-7217-6},
	language = {en},
	urldate = {2023-01-18},
	publisher = {Apress},
	author = {Bhatti, Jared and Corleissen, Zachary Sarah and Lambourne, Jen and Nunez, David and Waterhouse, Heidi},
	year = {2021},
	doi = {10.1007/978-1-4842-7217-6},
	file = {Full Text:/home/jamesotto852/Zotero/storage/VDCKZJVJ/Bhatti et al. - 2021 - Docs for Developers An Engineer’s Field Guide to .pdf:application/pdf},
}

@inproceedings{ko_six_2004,
	address = {Rome, Italy},
	title = {Six {Learning} {Barriers} in {End}-{User} {Programming} {Systems}},
	isbn = {978-0-7803-8696-9},
	url = {https://ieeexplore.ieee.org/document/1372321/},
	doi = {10.1109/VLHCC.2004.47},
	urldate = {2023-01-18},
	booktitle = {2004 {IEEE} {Symposium} on {Visual} {Languages} - {Human} {Centric} {Computing}},
	publisher = {IEEE},
	author = {Ko, Amy J. and Myers, Brad A. and Aung, Htet Htet},
	year = {2004},
	pages = {199--206},
	file = {Submitted Version:/home/jamesotto852/Zotero/storage/AVG9AKRN/Ko et al. - 2004 - Six Learning Barriers in End-User Programming Syst.pdf:application/pdf},
}

@article{robillard_what_2009,
	title = {What {Makes} {APIs} {Hard} to {Learn}? {Answers} from {Developers}},
	volume = {26},
	issn = {0740-7459},
	shorttitle = {What {Makes} {APIs} {Hard} to {Learn}?},
	url = {http://ieeexplore.ieee.org/document/5287006/},
	doi = {10.1109/MS.2009.193},
	number = {6},
	urldate = {2023-01-18},
	journal = {IEEE Software},
	author = {Robillard, Martin P.},
	month = nov,
	year = {2009},
	pages = {27--34},
	file = {Robillard - 2009 - What Makes APIs Hard to Learn Answers from Develo.pdf:/home/jamesotto852/Zotero/storage/4D5Q29KY/Robillard - 2009 - What Makes APIs Hard to Learn Answers from Develo.pdf:application/pdf},
}

@article{rosson_reuse_1996,
	title = {The reuse of uses in {Smalltalk} programming},
	volume = {3},
	issn = {1073-0516, 1557-7325},
	url = {https://dl.acm.org/doi/10.1145/234526.234530},
	doi = {10.1145/234526.234530},
	abstract = {Software reuse, a long-standing and refractory issue in software technology, has been specifically emphasized as an advantage of the object-oriented programming paradigm. We report an empirical study of expert Smalltalk programmers reusing user interface classes in small graphical applications. Our primary goal was to develop a qualitative characterization of expert reuse strategies that could be used to identify requirements for teaching and supporting reuse programming. A secondary interest was to demonstrate to these experts the Reuse View Matcher—a prototype reuse tool—and to collect some initial observations of this tool in use during reuse programming. We observed extensive “reuse of uses” in the programmers' work: they relied heavily on code in  expample applications that provided an implicit specification for reuse of the target class. We called this implicit specification a “usage context.” The programmers searched for relevant usage contexts early. They repeatedly evaluated the contextualized information to develop solution plans, and they borrowed and adapted it when the sample context suited their immediate reuse goals. The process of code development was highly dynamic and incremental; analysis and implementation were tightly interleaved, frequently driven by testing and debugging. These results are considered in terms of the tradeoffs that inhere in the reuse of uses and the teaching and tool support that might improve the efficiency and accuracy of this approach to reuse.},
	language = {en},
	number = {3},
	urldate = {2023-01-18},
	journal = {ACM Transactions on Computer-Human Interaction},
	author = {Rosson, Mary Beth and Carroll, John M.},
	month = sep,
	year = {1996},
	pages = {219--253},
	file = {Rosson and Carroll - 1996 - The reuse of uses in Smalltalk programming.pdf:/home/jamesotto852/Zotero/storage/GWLUHP72/Rosson and Carroll - 1996 - The reuse of uses in Smalltalk programming.pdf:application/pdf},
}

@inproceedings{wiedenbeck_facilitators_2005,
	address = {Dallas, TX, USA},
	title = {Facilitators and {Inhibitors} of {End}-{User} {Development} by {Teachers} in a {School} {Environment}},
	isbn = {978-0-7695-2443-6},
	url = {http://ieeexplore.ieee.org/document/1509506/},
	doi = {10.1109/VLHCC.2005.36},
	urldate = {2023-01-18},
	booktitle = {2005 {IEEE} {Symposium} on {Visual} {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC}'05)},
	publisher = {IEEE},
	author = {Wiedenbeck, S.},
	year = {2005},
	pages = {215--222},
	file = {Wiedenbeck - 2005 - Facilitators and Inhibitors of End-User Developmen.pdf:/home/jamesotto852/Zotero/storage/VNXSS9GY/Wiedenbeck - 2005 - Facilitators and Inhibitors of End-User Developmen.pdf:application/pdf},
}

@book{plass_cognitive_2010,
	edition = {1},
	title = {Cognitive {Load} {Theory}},
	isbn = {978-0-521-67758-5 978-0-521-86023-9 978-0-511-84474-4},
	url = {https://www.cambridge.org/core/product/identifier/9780511844744/type/book},
	abstract = {Cognitive load theory (CLT) is one of the most important theories in educational psychology, a highly effective guide for the design of multimedia and other learning materials. This edited volume brings together the most prolific researchers from around the world who study various aspects of cognitive load to discuss its current theoretical as well as practical issues. The book is divided into three parts. The first part describes the theoretical foundations and assumptions of CLT, the second discusses the empirical findings about the application of CLT to the design of learning environments, and the third part concludes the book with discussions and suggestions for new directions for future research. It aims to become the standard handbook in CLT for researchers and graduate students in psychology, education, and educational technology.},
	urldate = {2023-01-18},
	publisher = {Cambridge University Press},
	editor = {Plass, Jan L. and Moreno, Roxana and Brünken, Roland},
	month = apr,
	year = {2010},
	doi = {10.1017/CBO9780511844744},
}

@article{mclellan_building_1998,
	title = {Building more usable {APIs}},
	volume = {15},
	issn = {07407459},
	url = {http://ieeexplore.ieee.org/document/676963/},
	doi = {10.1109/52.676963},
	number = {3},
	urldate = {2023-01-18},
	journal = {IEEE Software},
	author = {McLellan, S.G. and Roesler, A.W. and Tempest, J.T. and Spinuzzi, C.I.},
	month = jun,
	year = {1998},
	pages = {78--86},
	file = {McLellan et al. - 1998 - Building more usable APIs.pdf:/home/jamesotto852/Zotero/storage/49MPGRNE/McLellan et al. - 1998 - Building more usable APIs.pdf:application/pdf},
}

@article{neal_system_1989,
	title = {A system for example-based programming},
	volume = {20},
	issn = {0736-6906},
	url = {https://dl.acm.org/doi/10.1145/67450.67464},
	doi = {10.1145/67450.67464},
	abstract = {We present an approach to programming environments that integrates syntax-directed editors with concepts borrowed from software reuse. We call our approach
              example-based programming
              , and we define it as programming using examples as visual aids or to fully or partially copy into programs. To implement an example-based programming environment, we augmented a syntax-directed editor with a window for example programs. The example programs, which are easily accessible, can be used as examples of language constructs, thus providing syntactic information through instantiations of templates, or as examples of algorithms or programs. The code in the example window can be viewed, totally or partially copied, or run. We discuss the motivation for example-based programming, describe our system implementing example-based programming in greater depth, and report on the results of an experiment to see how the system is used by programmers.},
	language = {en},
	number = {SI},
	urldate = {2023-01-23},
	journal = {ACM SIGCHI Bulletin},
	author = {Neal, L. R.},
	month = mar,
	year = {1989},
	pages = {63--68},
	file = {Neal - 1989 - A system for example-based programming.pdf:/home/jamesotto852/Zotero/storage/CPSJQS29/Neal - 1989 - A system for example-based programming.pdf:application/pdf},
}

@inproceedings{redmiles_reducing_1993,
	address = {Amsterdam, The Netherlands},
	title = {Reducing the variability of programmers' performance through explained examples},
	isbn = {978-0-89791-575-5},
	url = {http://portal.acm.org/citation.cfm?doid=169059.169082},
	doi = {10.1145/169059.169082},
	language = {en},
	urldate = {2023-01-23},
	booktitle = {Proceedings of the {SIGCHI} conference on {Human} factors in computing systems  - {CHI} '93},
	publisher = {ACM Press},
	author = {Redmiles, David F.},
	year = {1993},
	pages = {67--73},
	file = {Full Text:/home/jamesotto852/Zotero/storage/KDBGAMYL/Redmiles - 1993 - Reducing the variability of programmers' performan.pdf:application/pdf},
}

@incollection{goos_example_1996,
	address = {Berlin, Heidelberg},
	title = {Example explanation in learning environments},
	volume = {1086},
	isbn = {978-3-540-61327-5 978-3-540-68460-2},
	url = {http://link.springer.com/10.1007/3-540-61327-7_144},
	urldate = {2023-01-23},
	booktitle = {Intelligent {Tutoring} {Systems}},
	publisher = {Springer Berlin Heidelberg},
	author = {Burow, Robert and Weber, Gerhard},
	editor = {Goos, Gerhard and Hartmanis, Juris and Leeuwen, Jan and Frasson, Claude and Gauthier, Gilles and Lesgold, Alan},
	year = {1996},
	doi = {10.1007/3-540-61327-7_144},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {457--465},
	file = {Burow and Weber - 1996 - Example explanation in learning environments.pdf:/home/jamesotto852/Zotero/storage/53K7C2P4/Burow and Weber - 1996 - Example explanation in learning environments.pdf:application/pdf},
}

@article{schank_supporting_1993,
	title = {Supporting {Pascal} programming with an on-line template library and case studies},
	volume = {38},
	issn = {00207373},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0020737383710485},
	doi = {10.1006/imms.1993.1048},
	language = {en},
	number = {6},
	urldate = {2023-01-23},
	journal = {International Journal of Man-Machine Studies},
	author = {Schank, Patricia K. and Linn, Marcia C. and Clancy, Michael J.},
	month = jun,
	year = {1993},
	pages = {1031--1048},
	file = {Schank et al. - 1993 - Supporting Pascal programming with an on-line temp.pdf:/home/jamesotto852/Zotero/storage/LVV8Y3AG/Schank et al. - 1993 - Supporting Pascal programming with an on-line temp.pdf:application/pdf},
}
